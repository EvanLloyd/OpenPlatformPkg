/**
 * Copyright (c) 2013, AppliedMicro Corp. All rights reserved.
 *
 * This program and the accompanying materials
 * are licensed and made available under the terms and conditions of the BSD License
 * which accompanies this distribution.  The full text of the license may be found at
 * http://opensource.org/licenses/bsd-license.php
 *
 * THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
 * WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
 *
 **/
 
#ifndef _MCIDXE_H_
#define _MCIDXE_H_
 
#include <Uefi.h>
#include <Library/DebugLib.h>
#include <Library/IoLib.h>
#include <Library/TimerLib.h>
#include <Library/DebugLib.h>
#include <Library/PcdLib.h>
#include <Library/UefiBootServicesTableLib.h>
#include <Library/BaseMemoryLib.h>
#include <Library/DevicePathLib.h>

#include <Protocol/MmcHost.h>
/*
 * Controller registers
 */

#define SDHCI_DMA_ADDRESS	0x00

#define SDHCI_BLOCK_SIZE	0x04
#define SDHCI_MAKE_BLKSZ(Dma, blksz) (((Dma & 0x7) << 12) | (Blksz & 0xFFF))

#define SDHCI_BLOCK_COUNT	0x06

#define SDHCI_ARGUMENT		0x08

#define SDHCI_TRANSFER_MODE	0x0C
#define SDHCI_TRNS_DMA		0x01
#define SDHCI_TRNS_BLK_CNT_EN	0x02
#define SDHCI_TRNS_ACMD12	0x04
#define SDHCI_TRNS_READ	0x10
#define SDHCI_TRNS_MULTI	0x20

#define SDHCI_COMMAND		0x0E
#define SDHCI_CMD_RESP_MASK	0x03
#define SDHCI_CMD_CRC		0x08
#define SDHCI_CMD_INDEX	0x10
#define SDHCI_CMD_DATA		0x20
#define SDHCI_CMD_ABORTCMD	0xC0

#define SDHCI_CMD_RESP_NONE	0x00
#define SDHCI_CMD_RESP_LONG	0x01
#define SDHCI_CMD_RESP_SHORT	0x02
#define SDHCI_CMD_RESP_SHORT_BUSY 0x03

#define SDHCI_MAKE_CMD(c, f) (((c & 0xff) << 8) | (f & 0xff))
#define SDHCI_GET_CMD(c) ((c>>8) & 0x3f)

#define SDHCI_RESPONSE		0x10

#define SDHCI_BUFFER		0x20

#define SDHCI_PRESENT_STATE	0x24
#define SDHCI_CMD_INHIBIT	0x00000001
#define SDHCI_DATA_INHIBIT	0x00000002
#define SDHCI_DOING_WRITE	0x00000100
#define SDHCI_DOING_READ	0x00000200
#define SDHCI_SPACE_AVAILABLE	0x00000400
#define SDHCI_DATA_AVAILABLE	0x00000800
#define SDHCI_CARD_PRESENT	0x00010000
#define SDHCI_CARD_STATE_STABLE	0x00020000
#define SDHCI_CARD_DETECT_PIN_LEVEL	0x00040000
#define SDHCI_WRITE_PROTECT	0x00080000

#define SDHCI_HOST_CONTROL	0x28
#define SDHCI_CTRL_LED		0x01
#define SDHCI_CTRL_4BITBUS	0x02
#define SDHCI_CTRL_HISPD	0x04
#define SDHCI_CTRL_DMA_MASK	0x18
#define SDHCI_CTRL_SDMA	0x00
#define SDHCI_CTRL_ADMA1	0x08
#define SDHCI_CTRL_ADMA32	0x10
#define SDHCI_CTRL_ADMA64	0x18
#define SDHCI_CTRL_8BITBUS	0x20
#define SDHCI_CTRL_CD_TEST_INS	0x40
#define SDHCI_CTRL_CD_TEST	0x80

#define SDHCI_POWER_CONTROL	0x29
#define SDHCI_POWER_ON		0x01
#define SDHCI_POWER_180	0x0A
#define SDHCI_POWER_300	0x0C
#define SDHCI_POWER_330	0x0E

#define SDHCI_BLOCK_GAP_CONTROL	0x2A

#define SDHCI_WAKE_UP_CONTROL	0x2B
#define SDHCI_WAKE_ON_INT	0x01
#define SDHCI_WAKE_ON_INSERT	0x02
#define SDHCI_WAKE_ON_REMOVE	0x04

#define SDHCI_CLOCK_CONTROL	0x2C
#define SDHCI_DIVIDER_SHIFT	8
#define SDHCI_DIVIDER_HI_SHIFT	6
#define SDHCI_DIV_MASK	0xFF
#define SDHCI_DIV_MASK_LEN	8
#define SDHCI_DIV_HI_MASK	0x300
#define SDHCI_CLOCK_CARD_EN	0x0004
#define SDHCI_CLOCK_INT_STABLE	0x0002
#define SDHCI_CLOCK_INT_EN	0x0001

#define SDHCI_TIMEOUT_CONTROL	0x2E

#define SDHCI_SOFTWARE_RESET	0x2F
#define SDHCI_RESET_ALL	0x01
#define SDHCI_RESET_CMD	0x02
#define SDHCI_RESET_DATA	0x04

#define SDHCI_INT_STATUS	0x30
#define SDHCI_INT_ENABLE	0x34
#define SDHCI_SIGNAL_ENABLE	0x38
#define SDHCI_INT_RESPONSE	0x00000001
#define SDHCI_INT_DATA_END	0x00000002
#define SDHCI_INT_DMA_END	0x00000008
#define SDHCI_INT_SPACE_AVAIL	0x00000010
#define SDHCI_INT_DATA_AVAIL	0x00000020
#define SDHCI_INT_CARD_INSERT	0x00000040
#define SDHCI_INT_CARD_REMOVE	0x00000080
#define SDHCI_INT_CARD_INT	0x00000100
#define SDHCI_INT_ERROR	        0x00008000
#define SDHCI_INT_TIMEOUT	0x00010000
#define SDHCI_INT_CRC		0x00020000
#define SDHCI_INT_END_BIT	0x00040000
#define SDHCI_INT_INDEX	0x00080000
#define SDHCI_INT_DATA_TIMEOUT	0x00100000
#define SDHCI_INT_DATA_CRC	0x00200000
#define SDHCI_INT_DATA_END_BIT	0x00400000
#define SDHCI_INT_BUS_POWER	0x00800000
#define SDHCI_INT_ACMD12ERR	0x01000000
#define SDHCI_INT_ADMA_ERROR	0x02000000

#define SDHCI_INT_NORMAL_MASK	0x00007FFF
#define SDHCI_INT_ERROR_MASK	0xFFFF8000

#define SDHCI_INT_CMD_MASK	(SDHCI_INT_RESPONSE | SDHCI_INT_TIMEOUT | \
		SDHCI_INT_CRC | SDHCI_INT_END_BIT | SDHCI_INT_INDEX)
#define SDHCI_INT_DATA_MASK	(SDHCI_INT_DATA_END | SDHCI_INT_DMA_END | \
		SDHCI_INT_DATA_AVAIL | SDHCI_INT_SPACE_AVAIL | \
		SDHCI_INT_DATA_TIMEOUT | SDHCI_INT_DATA_CRC | \
		SDHCI_INT_DATA_END_BIT | SDHCI_INT_ADMA_ERROR)
#define SDHCI_INT_ALL_MASK	((UINT32)-1)

#define SDHCI_ACMD12_ERR	0x3C

/* 3E-3F reserved */

#define SDHCI_CAPABILITIES	0x40
#define SDHCI_TIMEOUT_CLK_MASK	0x0000003F
#define SDHCI_TIMEOUT_CLK_SHIFT 0
#define SDHCI_TIMEOUT_CLK_UNIT	0x00000080
#define SDHCI_CLOCK_BASE_MASK	0x00003F00
#define SDHCI_CLOCK_V3_BASE_MASK	0x0000FF00
#define SDHCI_CLOCK_BASE_SHIFT	8
#define SDHCI_MAX_BLOCK_MASK	0x00030000
#define SDHCI_MAX_BLOCK_SHIFT  16
#define SDHCI_CAN_DO_8BIT	0x00040000
#define SDHCI_CAN_DO_ADMA2	0x00080000
#define SDHCI_CAN_DO_ADMA1	0x00100000
#define SDHCI_CAN_DO_HISPD	0x00200000
#define SDHCI_CAN_DO_SDMA	0x00400000
#define SDHCI_CAN_VDD_330	0x01000000
#define SDHCI_CAN_VDD_300	0x02000000
#define SDHCI_CAN_VDD_180	0x04000000
#define SDHCI_CAN_64BIT	0x10000000

#define SDHCI_CAPABILITIES_1	0x44

#define SDHCI_MAX_CURRENT	0x48

/* 4C-4F reserved for more max current */

#define SDHCI_SET_ACMD12_ERROR	0x50
#define SDHCI_SET_INT_ERROR	0x52

#define SDHCI_ADMA_ERROR	0x54

/* 55-57 reserved */

#define SDHCI_ADMA_ADDRESS	0x58

/* 60-FB reserved */

#define SDHCI_SLOT_INT_STATUS	0xFC

#define SDHCI_HOST_VERSION	0xFE
#define SDHCI_VENDOR_VER_MASK	0xFF00
#define SDHCI_VENDOR_VER_SHIFT	8
#define SDHCI_SPEC_VER_MASK	0x00FF
#define SDHCI_SPEC_VER_SHIFT	0
#define SDHCI_SPEC_100	0
#define SDHCI_SPEC_200	1
#define SDHCI_SPEC_300	2

/*
 * End of controller registers.
 */

#define SDHCI_MAX_DIV_SPEC_200	256
#define SDHCI_MAX_DIV_SPEC_300	2046

/*
 * quirks
 */
#define SDHCI_QUIRK_32BIT_DMA_ADDR	(1 << 0)
#define SDHCI_QUIRK_REG32_RW		(1 << 1)
#define SDHCI_QUIRK_BROKEN_R1B		(1 << 2)
#define SDHCI_QUIRK_NO_HISPD_BIT	(1 << 3)
#define SDHCI_QUIRK_BROKEN_VOLTAGE	(1 << 4)
#define SDHCI_QUIRK_NO_CD		(1 << 5)
#define SDHCI_QUIRK_WAIT_SEND_CMD	(1 << 6)
#define SDHCI_QUIRK_NO_SIMULT_VDD_AND_POWER (1 << 7)

/*
 * Host SDMA buffer boundary. Valid values from 4K to 512K in powers of 2.
 */
#define SDHCI_DEFAULT_BOUNDARY_SIZE	(512 * 1024)
#define SDHCI_DEFAULT_BOUNDARY_ARG	(7)

struct APM_SDHCI_REG_T {
	UINT32	Sysad;		/* _SYSTEM_ADDRESS_0 */
	UINT16	Blksize;	/* _BLOCK_SIZE_BLOCK_COUNT_0 15:00 */
	UINT16	Blkcnt;		/* _BLOCK_SIZE_BLOCK_COUNT_0 31:16 */
	UINT32	Argument;	/* _ARGUMENT_0 */
	UINT16	Trnmod;		/* _CMD_XFER_MODE_0 15:00 xfer mode */
	UINT16	Cmdreg;		/* _CMD_XFER_MODE_0 31:16 cmd reg */
	UINT32	Rspreg0;	/* _RESPONSE_R0_R1_0 CMD RESP 31:00 */
	UINT32	Rspreg1;	/* _RESPONSE_R2_R3_0 CMD RESP 63:32 */
	UINT32	Rspreg2;	/* _RESPONSE_R4_R5_0 CMD RESP 95:64 */
	UINT32	Rspreg3;	/* _RESPONSE_R6_R7_0 CMD RESP 127:96 */
	UINT32	Bdata;		/* _BUFFER_DATA_PORT_0 */
	UINT32	Prnsts;		/* _PRESENT_STATE_0 */
	UINT8	Hostctl;	/* _POWER_CONTROL_HOST_0 7:00 */
	UINT8	Pwrcon;		/* _POWER_CONTROL_HOST_0 15:8 */
	UINT8	Blkgap;		/* _POWER_CONTROL_HOST_9 23:16 */
	UINT8	Wakcon;		/* _POWER_CONTROL_HOST_0 31:24 */
	UINT16	Clkcon;		/* _CLOCK_CONTROL_0 15:00 */
	UINT8	Timeoutcon;	/* _TIMEOUT_CTRL 23:16 */
	UINT8	Swrst;		/* _SW_RESET_ 31:24 */
	UINT16	Norintsts;	/* _INTERRUPT_STATUS_0 */
	UINT16  Errintsts;  /* _ERROR_INTERRUPT_STATUS_0 */
	UINT16	Norintstsen;	/* _INTERRUPT_STATUS_ENABLE_0 */
	UINT16  Errintstsen;  /* _ERRPR_INTERRUPT_STATUS_ENABLE_0 */
	UINT16	Norintsigen;	/* _INTERRUPT_SIGNAL_ENABLE_0 */
	UINT16  Errintsigen;  /* _ERROR_INTERRUPT_SIGNAL_ENABLE_0 */
	UINT16	Acmd12errsts;	/* _AUTO_CMD12_ERR_STATUS_0 15:00 */
	UINT16  Hostcon2;   /*_HOST_CONTROL 2 16:31 */
	UINT32	Capareg1;	/* _CAPABILITIES_0 */
	UINT16  Capareg2;   /*_CAPABILITIES_1 15:00 */
};

#define APM_SDHCI_HOSTCTL_DMASEL_MASK                      (3 << 3)
#define APM_SDHCI_HOSTCTL_DMASEL_SDMA                      (0 << 3)
#define APM_SDHCI_HOSTCTL_DMASEL_ADMA2_32BIT               (2 << 3)
#define APM_SDHCI_HOSTCTL_DMASEL_ADMA2_64BIT               (3 << 3)

#define APM_SDHCI_TRNMOD_DMA_ENABLE                        (1 << 0)
#define APM_SDHCI_TRNMOD_BLOCK_COUNT_ENABLE                (1 << 1)
#define APM_SDHCI_TRNMOD_AUTOCMD12_ENABLE                  (1 << 2)
#define APM_SDHCI_TRNMOD_DATA_XFER_DIR_SEL_WRITE           (0 << 4)
#define APM_SDHCI_TRNMOD_DATA_XFER_DIR_SEL_READ            (1 << 4)
#define APM_SDHCI_TRNMOD_MULTI_BLOCK_SELECT                (1 << 5)

#define APM_SDHCI_CMDREG_RESP_TYPE_SELECT_MASK             (3 << 0)
#define APM_SDHCI_CMDREG_RESP_TYPE_SELECT_NO_RESPONSE      (0 << 0)
#define APM_SDHCI_CMDREG_RESP_TYPE_SELECT_LENGTH_136       (1 << 0)
#define APM_SDHCI_CMDREG_RESP_TYPE_SELECT_LENGTH_48        (2 << 0)
#define APM_SDHCI_CMDREG_RESP_TYPE_SELECT_LENGTH_48_BUSY   (3 << 0)

#define APM_SDHCI_TRNMOD_CMD_CRC_CHECK                     (1 << 3)
#define APM_SDHCI_TRNMOD_CMD_INDEX_CHECK                   (1 << 4)
#define APM_SDHCI_TRNMOD_DATA_PRESENT_SELECT_DATA_TRANSFER (1 << 5)

#define APM_SDHCI_PRNSTS_CMD_INHIBIT_CMD                   (1 << 0)
#define APM_SDHCI_PRNSTS_CMD_INHIBIT_DAT                   (1 << 1)

#define APM_SDHCI_CLKCON_INTERNAL_CLOCK_ENABLE             (1 << 0)
#define APM_SDHCI_CLKCON_INTERNAL_CLOCK_STABLE             (1 << 1)
#define APM_SDHCI_CLKCON_SD_CLOCK_ENABLE                   (1 << 2)

#define APM_SDHCI_CLKCON_SDCLK_FREQ_SEL_SHIFT              8
#define APM_SDHCI_CLKCON_SDCLK_FREQ_SEL_MASK               (0xff << 8)

#define APM_SDHCI_SWRST_SW_RESET_FOR_ALL                   (7 << 0)
#define APM_SDHCI_SWRST_SW_RESET_FOR_CMD_LINE              (1 << 1)
#define APM_SDHCI_SWRST_SW_RESET_FOR_DAT_LINE              (1 << 2)

#define APM_SDHCI_NORINTSTS_CMD_COMPLETE                   (1 << 0)
#define APM_SDHCI_NORINTSTS_XFER_COMPLETE                  (1 << 1)
#define APM_SDHCI_NORINTSTS_DMA_INTERRUPT                  (1 << 3)
#define APM_SDHCI_NORINTSTS_ERR_INTERRUPT                  (1 << 15)
#define APM_SDHCI_NORINTSTS_DATA_READ_READY                (1 << 5)
#define APM_SDHCI_NORINTSTS_DATA_WRITE_READY               (1 << 4)

#define APM_SDHCI_NORINTSTS_DATA_TIMEOUT                   (1 << 20)
#define APM_SDHCI_NORINTSTS_DATA_CRC_ERROR                 (1 << 21)
#define APM_SDHCI_NORINTSTS_DATA_END_BIT_ERROR             (1 << 22)
#define APM_SDHCI_NORINTSTS_CMD_TIMEOUT                    (1 << 16)

#define APM_SDHCI_NORINTSTSEN_BUFFER_WRITE_READY           (1 << 4)
#define APM_SDHCI_NORINTSTSEN_BUFFER_READ_READY            (1 << 5)

#define APM_SDHCI_NORINTSIGEN_XFER_COMPLETE                (1 << 1)

struct APM_SDHCI_HOST_CAP_T {
	UINT32 Cap_Low;
	UINT32 Cap_High;
} ;

struct APM_SDHCI_HOST_T {
	INTN Index;
	VOID *Base;
	struct APM_SDHCI_REG_T *Reg;
	struct APM_SDHCI_HOST_CAP_T Cap;
	UINT32 Xfer_Mode_Shadow;
	UINT32 Xfer_Block_Size_Shadow;
	UINT32 Version;	/* SDHCI spec. version */
	UINT32 Clock;	/* Current clock (MHz) */
	INTN Bus_Width;
	INTN Ss_Inserted;
};

#define APM_SDHCI_HOST_SUPPORT 2
 
#endif /*_MCIDXE_H_ */
